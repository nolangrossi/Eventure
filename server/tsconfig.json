{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "rootDir": "src" /* Specify the root folder within your source files. */,
    "outDir": "dist" /* Redirect output structure to the directory. */,
    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "skipLibCheck": true,
    "moduleResolution": "node",
    "types": ["vite/client"],

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    /* Type Checking */
    "strict": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    // "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
    "useUnknownInCatchVariables": true /* Ensure 'unknown' is used for catch clause variables. */
  },
  "include": [
    "src"
, "src/server.ts", "../client/src/pages/vite-env.d.ts"  ],
  "typeRoots": [
    "./node_modules/@types",
    "./src/types"
  ]
}